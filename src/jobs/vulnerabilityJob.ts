import { fetchVulnerabilities } from "../services/nvdService";
import { config } from "../config/config";
import connectDB from "../db/connection";
import { SlackService } from "../services/slackService"; // Import SlackService
import { SlackTokenService } from "../services/slackTokenService";
import { Request, Response } from "express";

export async function vulnerabilityCronJob(req: Request, res: Response) {
  {
    console.log(">>>>>>> JOB STARTED <<<<<<<");

    await connectDB();
    console.time("fetchVulnerabilities");
    let vulnerabilities = await fetchVulnerabilities();
    console.timeEnd("fetchVulnerabilities");
    const slackTokenService = new SlackTokenService();

    const users = await slackTokenService.getAllAuthedUserTokens();
    const vulCount = vulnerabilities.length;
    console.log("Vulnerabilities detected ><", vulCount);
    console.time("traverseVul");
    if (vulCount > 0) {
      for await (const vulnerability of vulnerabilities) {
        users.map((user) => {
          const slackService = new SlackService(user.access_token);
          slackService.sendVulnerabilityMessage(
            vulnerability,
            user.authed_user.id,
            user.access_token,
            user.refresh_token
          );
        });
      }
      return res.status(200).send({
        vulnerabilities: vulCount,
        message: "Check Slack Bot.",
      });
    }
    console.timeEnd("traverseVul");

    return res.status(204).send({
      vulnerabilities: vulCount,
      message: "No vulnerabilities identified.",
    });
  }
}
