import { CronJob } from "cron";
import { fetchVulnerabilities } from "../services/nvdService";
import { sendVulnerabilityMessage } from "../services/slackService";
import { config } from "../config/config";
import { secondsToCron } from "../utils/helpers";
import connectDB from "../db/connection";

// Defining the job to run periodically
// export const vulnerabilityJob = new CronJob(
//   secondsToCron(config.scanInterval),
//   async () => {
//     console.log(">>>>>>> CRON JOB STARTED <<<<<<<");

//     let vulnerabilities = await fetchVulnerabilities();
//     if (vulnerabilities.length) {
//       vulnerabilities.forEach((vulnerability: any) => {
//         sendVulnerabilityMessage(vulnerability, config.adminId);
//       });
//     }
//   }
// );

export default async function handler(_req: any, res: any) {
  {
    console.log(">>>>>>> CRON JOB STARTED <<<<<<<");
    connectDB();
    let vulnerabilities = await fetchVulnerabilities();
    if (vulnerabilities.length) {
      vulnerabilities.forEach((vulnerability: any) => {
        sendVulnerabilityMessage(vulnerability, config.adminId);
      });
    }
    console.log("Vulnerabilities detected ><", vulnerabilities.length);

    res.status(200);
  }
}
